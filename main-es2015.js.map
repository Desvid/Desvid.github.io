{"version":3,"sources":["./src/environments/environment.ts","./src/app/core/constans.ts","./src/app/pages/template/template.component.ts","./src/app/pages/template/template.component.html","./src/app/core/api/api.service.ts","./src/app/core/helpers.ts","./src/app/shared/shared.module.ts","./src/app/core/api/templates/templates.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/header/Header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/table/table.component.ts","./src/app/shared/components/table/table.component.html","./src/app/app.module.ts","./src/app/pages/index.ts","./src/app/shared/components/edit-template-dialog/edit-template-dialog.component.ts","./src/app/shared/components/edit-template-dialog/edit-template-dialog.component.html","./src/app/pages/templates-dashboard/templates-dashboard.component.ts","./src/app/pages/templates-dashboard/templates-dashboard.component.html","./src/app/app-routing.module.ts","./src/app/shared/directives/editable.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export const DEFAULT_FONT_SIZE = 18;\nexport const LOCAL_STORAGE_KEY = 'storagedEditableItems';","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TemplateService } from 'src/app/core/api/templates/templates.service';\nimport { SavedLocalStorageData, Template } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html'\n})\nexport class TemplateComponent implements OnInit {\n  templates: SavedLocalStorageData[] = [];\n  template: SavedLocalStorageData;\n  templateId: number = -1;\n  htmlTemplate: string = '';\n\n  constructor(\n    private readonly activateRoute: ActivatedRoute,\n    private readonly templatesService: TemplateService\n  ) {\n    this.template = {} as SavedLocalStorageData;\n  }\n\n  async ngOnInit() {\n    const id = this.activateRoute.snapshot.params['id'];\n    this.templateId = id;\n    this.templates = this.templatesService.getParsedTemplates();\n    this.template = this.templates[this.templateId - 1];\n    this.htmlTemplate = this.template.template;\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"wrapper\">\n    <div\n      editable\n      [templateId]=\"templateId\"\n      [innerHTML]=\"htmlTemplate\">\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {}\n\n  private formatErrors(error: any): Observable<any> {\n    return throwError(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Promise<any> { \n    return this.http.get(path, { params })\n      .pipe(catchError(this.formatErrors))\n      .toPromise()\n  }\n}","export function formatTableDate(date: Date): string {\n  const day = date.getDay();\n  const month = date.toLocaleString('default', { month: 'long' });\n  const year = date.getFullYear();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  const ampm = hours >= 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  const strTime = `${hours}:${minutes < 10 ? '0'+minutes : minutes} ${ampm}`;\n  return `${day} ${month}, ${year} ${strTime}`;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TableComponent } from './components/table/table.component';\nimport { EditTemplateDialog } from './components/edit-template-dialog/edit-template-dialog.component';\nimport { HeaderComponent } from './components/header/Header.component';\n\n\n@NgModule({\n  declarations: [\n    TableComponent,\n    EditTemplateDialog,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule\n  ],\n  exports: [\n    TableComponent,\n    EditTemplateDialog,\n    HeaderComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Template } from '../../models/api.models';\nimport { LOCAL_STORAGE_KEY } from '../../constans';\nimport { SavedLocalStorageData } from '../../models';\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class TemplateService {\n\n  constructor(private api: ApiService) { }\n\n  getTemplates(): Promise<Template[]> {\n    return this.api.get('https://run.mocky.io/v3/f15072ac-8fb0-495a-9f89-61ac7e72c543');\n  }\n\n  getParsedTemplates(): SavedLocalStorageData[] {\n    const storagedEditableItems = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return typeof storagedEditableItems === 'string' ? this.parseTemplates(storagedEditableItems) : [];\n  }\n\n  private parseTemplates(storagedEditableItems: string): SavedLocalStorageData[] {\n    return JSON.parse(storagedEditableItems);\n  }\n}\n","import { Component } from '@angular/core';\nimport { TemplateService } from './core/api/templates/templates.service';\nimport { DEFAULT_FONT_SIZE, LOCAL_STORAGE_KEY } from './core/constans';\nimport { SavedLocalStorageData, StorageEditableItemConfig } from './core/models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n\n  constructor(private readonly templatesService: TemplateService) {}\n\n  async ngOnInit() {\n    const isEmptyLocalStorage = !localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (isEmptyLocalStorage) {\n      const data = await this.templatesService.getTemplates();\n      const editableAmounts = data.map((item) => {\n        return item.template.split('editable').length - 1;\n      });\n      const storagedEditableItems = data.map((template, id) => {\n        const configs = [];\n        for (let i = 0; i < editableAmounts[id]; i++) {\n          configs.push(Object.assign({}, { fontSize: DEFAULT_FONT_SIZE } as StorageEditableItemConfig))\n        }\n        return Object.assign({}, {...template, configs } as SavedLocalStorageData)\n      })\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storagedEditableItems));\n    }\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  constructor(private readonly router: Router) {}\n\n  goBackHome() {\n    this.router.navigate(['/']);\n  }\n}\n","<header class=\"header\">\n  <div class=\"header-content page-content\">\n    <div class=\"logo-container\">\n      <img src=\"../../../../assets/logo-ardas.png\" alt=\"logo\" class=\"logo\">\n      Test task by<b>Fedulov Anton</b>\n    </div>\n    <div class=\"action\">\n      <button mat-fab color=\"warn\" aria-label=\"home button\" (click)=\"goBackHome()\">\n        <mat-icon>home</mat-icon>\n      </button>\n    </div>\n  </div>\n</header>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TableData } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent {\n\n  @Input() dataSource: TableData[] = [];\n  @Input() displayedColumns: string[] = [];\n  @Output() onCellClick = new EventEmitter<number>();\n\n  handleCellClick(column: string, element: TableData): void {\n    if (column === 'name') this.onCellClick.emit(element.id);\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table-container\">\n\n  <ng-container *ngFor=\"let column of displayedColumns; let i = index\">\n    <ng-container [matColumnDef]=\"column\">\n      <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n      <td\n        [ngClass]=\"{'name': column === 'name'}\"\n        (click)=\"handleCellClick(column, element)\"\n        mat-cell\n        *matCellDef=\"let element\"\n      >\n        {{ element[column] }}\n      </td>\n    </ng-container>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr\n    mat-row\n    *matRowDef=\"let row; columns: displayedColumns;\"\n  ></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './template/template.component';\nexport * from './templates-dashboard/templates-dashboard.component';","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nexport interface DialogData {\n  value: string;\n  fontSize: number;\n}\n\n@Component({\n  selector: 'app-edit-template-dialog',\n  templateUrl: './edit-template-dialog.component.html',\n  styleUrls: ['./edit-template-dialog.component.scss']\n})\nexport class EditTemplateDialog implements OnInit, OnDestroy {\n  subscriptions: Array<Subscription> = [];\n  fontSizeControl: FormControl;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditTemplateDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      this.fontSizeControl = new FormControl(data.fontSize, [Validators.min(10), Validators.max(120)]);\n      \n    }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.fontSizeControl.valueChanges.subscribe(value => this.data.fontSize = value)\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(subscribe => subscribe.unsubscribe());\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  \n}\n","<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Editable element</mat-label>\n    <input matInput [(ngModel)]=\"data.value\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Font size</mat-label>\n    <input matInput type=\"number\" placeholder=\"Ex. 12\" [formControl]=\"fontSizeControl\" min=\"10\">\n    <span matSuffix>px</span>\n    <mat-error *ngIf=\"fontSizeControl.invalid\">Min size: 10px and Max size: 120px</mat-error>\n  </mat-form-field> \n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data\" [disabled]=\"fontSizeControl.invalid\" cdkFocusInitial>Ok</button>\n</div>\n","import { AfterViewInit, Component, DoCheck, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TemplateService } from 'src/app/core/api/templates/templates.service';\nimport { formatTableDate } from 'src/app/core/helpers';\nimport { SavedLocalStorageData, TableData, Template } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-templates-dashboard',\n  templateUrl: './templates-dashboard.component.html'\n})\nexport class TemplatesDashboardComponent implements OnInit {\n  tableData: TableData[] = [];\n  displayedTableColumns: string[];\n\n  constructor(private readonly templatesService: TemplateService, private readonly router: Router) {\n    this.displayedTableColumns = ['id', 'name', 'modified'];\n  }\n\n  async ngOnInit() {\n    const test = await this.templatesService.getTemplates();\n    const data = this.templatesService.getParsedTemplates();\n    this.tableData = this.getTableData(data);\n  }\n\n  private getTableData(templatesData: SavedLocalStorageData[]): TableData[] {\n    return templatesData.map(({ id, name, modified }) => {\n      const lastModifiedDate = formatTableDate(new Date(modified));\n      return Object.assign({}, { id, name, modified: lastModifiedDate } as TableData);\n    });\n  }\n\n  public handleCellClick(id: number): void {\n    this.router.navigate([`/template/${id}`]);\n  }\n}\n","<div class=\"page-content\">\n  <app-table\n    *ngIf=\"tableData\"\n    [dataSource]=\"tableData\"\n    [displayedColumns]=\"displayedTableColumns\"\n    (onCellClick)=\"handleCellClick($event)\"\n  ></app-table>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TemplateComponent, TemplatesDashboardComponent } from './pages';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplatesDashboardComponent,\n    loadChildren: () => import('./pages/templates-dashboard/templates-dashboard.module')\n      .then(m => m.TemplatesDashboardModule)\n  },\n  {\n    path: 'template/:id',\n    pathMatch: 'full',\n    component: TemplateComponent,\n    loadChildren: () => import('./pages/template/template.module').then(m => m.TemplateModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Directive, ElementRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TemplateService } from 'src/app/core/api/templates/templates.service';\nimport { LOCAL_STORAGE_KEY } from 'src/app/core/constans';\nimport { SavedLocalStorageData, StorageEditableItemConfig } from 'src/app/core/models';\nimport { EditTemplateDialog } from '../components/edit-template-dialog/edit-template-dialog.component';\n \n@Directive({\n    selector: '[editable]'\n})\nexport class EditableDirective implements OnInit {\n  configs: Array<StorageEditableItemConfig> = [];\n  template: SavedLocalStorageData;\n  templates: SavedLocalStorageData[] = [];\n  result: string = '';\n  isOpenedDialog: boolean = false;\n\n  @Input() templateId: number = -1;\n     \n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    public dialog: MatDialog,\n    private templatesService: TemplateService\n  ) {\n    this.template = {} as SavedLocalStorageData;\n  }\n\n  ngOnInit() {\n    this.templates = this.templatesService.getParsedTemplates()\n    this.template = this.templates[this.templateId - 1];\n    this.initialtransform();\n  }\n\n  @HostListener(\"mouseenter\") onMouseEnter() {\n    const editableElements = this.elementRef.nativeElement.querySelectorAll('.editable');\n    editableElements.forEach((element: HTMLElement, id: number) => element.addEventListener('click', this.clickListener.bind(this, id, element)))\n  }\n\n  @HostListener(\"mouseleave\") onMouseLeave() {\n    this.removeAllEventListeners();\n  }\n\n  private initialtransform(): void {\n    const editableElements = this.elementRef.nativeElement.querySelectorAll('.editable');\n    editableElements.forEach((element: HTMLElement, id: number) => {\n      const fontSize = this.template.configs[id].fontSize;\n      this.renderer.setStyle(element, \"font-size\", `${fontSize}px`);\n    })\n  }\n\n  private removeAllEventListeners() {\n    if (!this.isOpenedDialog) {\n      const editableElements = this.elementRef.nativeElement.querySelectorAll('.editable');\n      editableElements.forEach((element: HTMLElement) => {\n        const new_element = element.cloneNode(true);\n        if (element.parentNode) element.parentNode.replaceChild(new_element, element);\n      })\n    }\n  }\n\n  private clickListener(id: number, element: HTMLElement) {\n    const config = this.template.configs[id];\n    this.openDialog(element, config)\n  }\n\n  private saveUpdatedTemplate(): void {\n    const templateHTML = this.elementRef.nativeElement.querySelectorAll('.template');\n    this.template.template = templateHTML[0].outerHTML;\n    this.templates[this.templateId - 1] = this.template;\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(this.templates));\n  }\n\n  private openDialog(element: HTMLElement, config: StorageEditableItemConfig): void {\n    this.isOpenedDialog = true;\n    const { fontSize } = config;\n    const value = element.innerText;\n    const dialogRef = this.dialog.open(EditTemplateDialog, {\n      width: '30%',\n      data: { fontSize, value }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        const { value, fontSize } = result;\n        element.innerHTML = value;\n        this.template.modified = +new Date();\n        config.fontSize = fontSize;\n        this.renderer.setStyle(element, \"font-size\", `${fontSize}px`);\n      }\n      this.isOpenedDialog = false;\n      this.removeAllEventListeners();\n      this.saveUpdatedTemplate();\n    })\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}