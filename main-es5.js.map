{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/core/constans.ts","webpack:///src/app/pages/template/template.component.ts","webpack:///src/app/pages/template/template.component.html","webpack:///src/app/core/api/api.service.ts","webpack:///src/app/core/helpers.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/api/templates/templates.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/components/header/Header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/table/table.component.ts","webpack:///src/app/shared/components/table/table.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/index.ts","webpack:///src/app/shared/components/edit-template-dialog/edit-template-dialog.component.ts","webpack:///src/app/shared/components/edit-template-dialog/edit-template-dialog.component.html","webpack:///src/app/pages/templates-dashboard/templates-dashboard.component.html","webpack:///src/app/pages/templates-dashboard/templates-dashboard.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/directives/editable.directive.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","DEFAULT_FONT_SIZE","LOCAL_STORAGE_KEY","TemplateComponent","activateRoute","templatesService","templates","templateId","htmlTemplate","template","id","snapshot","params","getParsedTemplates","ApiService","http","error","path","get","pipe","formatErrors","toPromise","formatTableDate","date","day","getDay","month","toLocaleString","year","getFullYear","hours","getHours","minutes","getMinutes","ampm","strTime","SharedModule","TemplateService","api","storagedEditableItems","localStorage","getItem","parseTemplates","JSON","parse","AppComponent","isEmptyLocalStorage","getTemplates","data","editableAmounts","map","item","split","length","configs","i","push","Object","assign","fontSize","setItem","stringify","HeaderComponent","router","navigate","goBackHome","TableComponent","dataSource","displayedColumns","onCellClick","column","element","emit","AppModule","EditTemplateDialog","dialogRef","subscriptions","fontSizeControl","min","max","valueChanges","subscribe","value","unsubscribe","close","onNoClick","TemplatesDashboardComponent","tableData","displayedTableColumns","test","getTableData","templatesData","name","modified","lastModifiedDate","Date","routes","component","loadChildren","then","m","TemplatesDashboardModule","pathMatch","TemplateModule","AppRoutingModule","forRoot","EditableDirective","elementRef","renderer","dialog","result","isOpenedDialog","initialtransform","editableElements","nativeElement","querySelectorAll","forEach","addEventListener","clickListener","bind","removeAllEventListeners","setStyle","new_element","cloneNode","parentNode","replaceChild","config","openDialog","templateHTML","outerHTML","innerText","open","width","afterClosed","innerHTML","saveUpdatedTemplate","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export const DEFAULT_FONT_SIZE = 18;\nexport const LOCAL_STORAGE_KEY = 'storagedEditableItems';","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TemplateService } from 'src/app/core/api/templates/templates.service';\nimport { SavedLocalStorageData, Template } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html'\n})\nexport class TemplateComponent implements OnInit {\n  templates: SavedLocalStorageData[] = [];\n  template: SavedLocalStorageData;\n  templateId: number = -1;\n  htmlTemplate: string = '';\n\n  constructor(\n    private readonly activateRoute: ActivatedRoute,\n    private readonly templatesService: TemplateService\n  ) {\n    this.template = {} as SavedLocalStorageData;\n  }\n\n  async ngOnInit() {\n    const id = this.activateRoute.snapshot.params['id'];\n    this.templateId = id;\n    this.templates = this.templatesService.getParsedTemplates();\n    this.template = this.templates[this.templateId - 1];\n    this.htmlTemplate = this.template.template;\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"wrapper\">\n    <div\n      editable\n      [templateId]=\"templateId\"\n      [innerHTML]=\"htmlTemplate\">\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {}\n\n  private formatErrors(error: any): Observable<any> {\n    return throwError(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Promise<any> { \n    return this.http.get(path, { params })\n      .pipe(catchError(this.formatErrors))\n      .toPromise()\n  }\n}","export function formatTableDate(date: Date): string {\n  const day = date.getDay();\n  const month = date.toLocaleString('default', { month: 'long' });\n  const year = date.getFullYear();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  const ampm = hours >= 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  const strTime = `${hours}:${minutes < 10 ? '0'+minutes : minutes} ${ampm}`;\n  return `${day} ${month}, ${year} ${strTime}`;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TableComponent } from './components/table/table.component';\nimport { EditTemplateDialog } from './components/edit-template-dialog/edit-template-dialog.component';\nimport { HeaderComponent } from './components/header/Header.component';\n\n\n@NgModule({\n  declarations: [\n    TableComponent,\n    EditTemplateDialog,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule\n  ],\n  exports: [\n    TableComponent,\n    EditTemplateDialog,\n    HeaderComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Template } from '../../models/api.models';\nimport { LOCAL_STORAGE_KEY } from '../../constans';\nimport { SavedLocalStorageData } from '../../models';\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class TemplateService {\n\n  constructor(private api: ApiService) { }\n\n  getTemplates(): Promise<Template[]> {\n    return this.api.get('https://run.mocky.io/v3/f15072ac-8fb0-495a-9f89-61ac7e72c543');\n  }\n\n  getParsedTemplates(): SavedLocalStorageData[] {\n    const storagedEditableItems = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return typeof storagedEditableItems === 'string' ? this.parseTemplates(storagedEditableItems) : [];\n  }\n\n  private parseTemplates(storagedEditableItems: string): SavedLocalStorageData[] {\n    return JSON.parse(storagedEditableItems);\n  }\n}\n","import { Component } from '@angular/core';\nimport { TemplateService } from './core/api/templates/templates.service';\nimport { DEFAULT_FONT_SIZE, LOCAL_STORAGE_KEY } from './core/constans';\nimport { SavedLocalStorageData, StorageEditableItemConfig } from './core/models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n\n  constructor(private readonly templatesService: TemplateService) {}\n\n  async ngOnInit() {\n    const isEmptyLocalStorage = !localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (isEmptyLocalStorage) {\n      const data = await this.templatesService.getTemplates();\n      const editableAmounts = data.map((item) => {\n        return item.template.split('editable').length - 1;\n      });\n      const storagedEditableItems = data.map((template, id) => {\n        const configs = [];\n        for (let i = 0; i < editableAmounts[id]; i++) {\n          configs.push(Object.assign({}, { fontSize: DEFAULT_FONT_SIZE } as StorageEditableItemConfig))\n        }\n        return Object.assign({}, {...template, configs } as SavedLocalStorageData)\n      })\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storagedEditableItems));\n    }\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  constructor(private readonly router: Router) {}\n\n  goBackHome() {\n    this.router.navigate(['/']);\n  }\n}\n","<header class=\"header\">\n  <div class=\"header-content page-content\">\n    <div class=\"logo-container\">\n      <img src=\"../../../../assets/logo-ardas.png\" alt=\"logo\" class=\"logo\">\n      Test task by<b>Fedulov Anton</b>\n    </div>\n    <div class=\"action\">\n      <button mat-fab color=\"warn\" aria-label=\"home button\" (click)=\"goBackHome()\">\n        <mat-icon>home</mat-icon>\n      </button>\n    </div>\n  </div>\n</header>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TableData } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent {\n\n  @Input() dataSource: TableData[] = [];\n  @Input() displayedColumns: string[] = [];\n  @Output() onCellClick = new EventEmitter<number>();\n\n  handleCellClick(column: string, element: TableData): void {\n    if (column === 'name') this.onCellClick.emit(element.id);\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table-container\">\n\n  <ng-container *ngFor=\"let column of displayedColumns; let i = index\">\n    <ng-container [matColumnDef]=\"column\">\n      <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n      <td\n        [ngClass]=\"{'name': column === 'name'}\"\n        (click)=\"handleCellClick(column, element)\"\n        mat-cell\n        *matCellDef=\"let element\"\n      >\n        {{ element[column] }}\n      </td>\n    </ng-container>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr\n    mat-row\n    *matRowDef=\"let row; columns: displayedColumns;\"\n  ></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './template/template.component';\nexport * from './templates-dashboard/templates-dashboard.component';","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nexport interface DialogData {\n  value: string;\n  fontSize: number;\n}\n\n@Component({\n  selector: 'app-edit-template-dialog',\n  templateUrl: './edit-template-dialog.component.html',\n  styleUrls: ['./edit-template-dialog.component.scss']\n})\nexport class EditTemplateDialog implements OnInit, OnDestroy {\n  subscriptions: Array<Subscription> = [];\n  fontSizeControl: FormControl;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditTemplateDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      this.fontSizeControl = new FormControl(data.fontSize, [Validators.min(10), Validators.max(120)]);\n      \n    }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.fontSizeControl.valueChanges.subscribe(value => this.data.fontSize = value)\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(subscribe => subscribe.unsubscribe());\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  \n}\n","<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Editable element</mat-label>\n    <input matInput [(ngModel)]=\"data.value\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Font size</mat-label>\n    <input matInput type=\"number\" placeholder=\"Ex. 12\" [formControl]=\"fontSizeControl\" min=\"10\">\n    <span matSuffix>px</span>\n    <mat-error *ngIf=\"fontSizeControl.invalid\">Min size: 10px and Max size: 120px</mat-error>\n  </mat-form-field> \n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data\" [disabled]=\"fontSizeControl.invalid\" cdkFocusInitial>Ok</button>\n</div>\n","<div class=\"page-content\">\n  <app-table\n    *ngIf=\"tableData\"\n    [dataSource]=\"tableData\"\n    [displayedColumns]=\"displayedTableColumns\"\n    (onCellClick)=\"handleCellClick($event)\"\n  ></app-table>\n</div>","import { AfterViewInit, Component, DoCheck, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TemplateService } from 'src/app/core/api/templates/templates.service';\nimport { formatTableDate } from 'src/app/core/helpers';\nimport { SavedLocalStorageData, TableData, Template } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-templates-dashboard',\n  templateUrl: './templates-dashboard.component.html'\n})\nexport class TemplatesDashboardComponent implements OnInit {\n  tableData: TableData[] = [];\n  displayedTableColumns: string[];\n\n  constructor(private readonly templatesService: TemplateService, private readonly router: Router) {\n    this.displayedTableColumns = ['id', 'name', 'modified'];\n  }\n\n  async ngOnInit() {\n    const test = await this.templatesService.getTemplates();\n    const data = this.templatesService.getParsedTemplates();\n    this.tableData = this.getTableData(data);\n  }\n\n  private getTableData(templatesData: SavedLocalStorageData[]): TableData[] {\n    return templatesData.map(({ id, name, modified }) => {\n      const lastModifiedDate = formatTableDate(new Date(modified));\n      return Object.assign({}, { id, name, modified: lastModifiedDate } as TableData);\n    });\n  }\n\n  public handleCellClick(id: number): void {\n    this.router.navigate([`/template/${id}`]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TemplateComponent, TemplatesDashboardComponent } from './pages';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemplatesDashboardComponent,\n    loadChildren: () => import('./pages/templates-dashboard/templates-dashboard.module')\n      .then(m => m.TemplatesDashboardModule)\n  },\n  {\n    path: 'template/:id',\n    pathMatch: 'full',\n    component: TemplateComponent,\n    loadChildren: () => import('./pages/template/template.module').then(m => m.TemplateModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Directive, ElementRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TemplateService } from 'src/app/core/api/templates/templates.service';\nimport { LOCAL_STORAGE_KEY } from 'src/app/core/constans';\nimport { SavedLocalStorageData, StorageEditableItemConfig } from 'src/app/core/models';\nimport { EditTemplateDialog } from '../components/edit-template-dialog/edit-template-dialog.component';\n \n@Directive({\n    selector: '[editable]'\n})\nexport class EditableDirective implements OnInit {\n  configs: Array<StorageEditableItemConfig> = [];\n  template: SavedLocalStorageData;\n  templates: SavedLocalStorageData[] = [];\n  result: string = '';\n  isOpenedDialog: boolean = false;\n\n  @Input() templateId: number = -1;\n     \n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    public dialog: MatDialog,\n    private templatesService: TemplateService\n  ) {\n    this.template = {} as SavedLocalStorageData;\n  }\n\n  ngOnInit() {\n    this.templates = this.templatesService.getParsedTemplates()\n    this.template = this.templates[this.templateId - 1];\n    this.initialtransform();\n  }\n\n  @HostListener(\"mouseenter\") onMouseEnter() {\n    const editableElements = this.elementRef.nativeElement.querySelectorAll('.editable');\n    editableElements.forEach((element: HTMLElement, id: number) => element.addEventListener('click', this.clickListener.bind(this, id, element)))\n  }\n\n  @HostListener(\"mouseleave\") onMouseLeave() {\n    this.removeAllEventListeners();\n  }\n\n  private initialtransform(): void {\n    const editableElements = this.elementRef.nativeElement.querySelectorAll('.editable');\n    editableElements.forEach((element: HTMLElement, id: number) => {\n      const fontSize = this.template.configs[id].fontSize;\n      this.renderer.setStyle(element, \"font-size\", `${fontSize}px`);\n    })\n  }\n\n  private removeAllEventListeners() {\n    if (!this.isOpenedDialog) {\n      const editableElements = this.elementRef.nativeElement.querySelectorAll('.editable');\n      editableElements.forEach((element: HTMLElement) => {\n        const new_element = element.cloneNode(true);\n        if (element.parentNode) element.parentNode.replaceChild(new_element, element);\n      })\n    }\n  }\n\n  private clickListener(id: number, element: HTMLElement) {\n    const config = this.template.configs[id];\n    this.openDialog(element, config)\n  }\n\n  private saveUpdatedTemplate(): void {\n    const templateHTML = this.elementRef.nativeElement.querySelectorAll('.template');\n    this.template.template = templateHTML[0].outerHTML;\n    this.templates[this.templateId - 1] = this.template;\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(this.templates));\n  }\n\n  private openDialog(element: HTMLElement, config: StorageEditableItemConfig): void {\n    this.isOpenedDialog = true;\n    const { fontSize } = config;\n    const value = element.innerText;\n    const dialogRef = this.dialog.open(EditTemplateDialog, {\n      width: '30%',\n      data: { fontSize, value }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        const { value, fontSize } = result;\n        element.innerHTML = value;\n        this.template.modified = +new Date();\n        config.fontSize = fontSize;\n        this.renderer.setStyle(element, \"font-size\", `${fontSize}px`);\n      }\n      this.isOpenedDialog = false;\n      this.removeAllEventListeners();\n      this.saveUpdatedTemplate();\n    })\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}